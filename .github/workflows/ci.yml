name: Continuous Integration

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov flake8
    
    - name: Lint with flake8
      run: |
        # 停止構建如果有Python語法錯誤或未定義名稱
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero 將所有錯誤視為警告。GitHub編輯器寬度為127字符
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Run Unit Tests
      run: |
        pytest tests/ -v --cov=hrr_analysis --cov-report=xml --cov-report=term
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  # ... (test job 保持不變) ...

  data-quality:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.9
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    # 修正: 先生成 features_ml.parquet 才能檢查
    - name: Generate Features for Quality Check
      run: |
        # 假設有測試用的 export.xml
        # cp tests/data/sample_export.xml apple_health_export/export.xml
        python hrr_analysis/01_cleaning.py
        python hrr_analysis/02_features.py
        
    - name: Check Data Quality
      run: |
        python scripts/data_quality_check.py

    # 修正: feature isolation 需要模型訓練後才能檢查 schema
    # 建議將此步驟移至 regression.yml 或一個更完整的整合測試流程中

  regression-test:
    runs-on: ubuntu-latest
    needs: data-quality
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.9
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    # 修正: 運行修正後的 regression_test.py
    # 這個腳本會運行整個 pipeline 並與黃金標準比對
    - name: Run Regression Tests
      run: |
        # 假設有測試用的 export.xml 和數據
        # cp tests/data/sample_export.xml apple_health_export/export.xml
        python scripts/regression_test.py
        
    # 修正: 不再需要 PR comment，因為 test 的 pass/fail 狀態已經足夠清晰
    # 如果仍需要，需改寫 script 來解析 dataset_card.json

# ... (build-docs job 保持不變) ...

  build-docs:
    runs-on: ubuntu-latest
    needs: regression-test
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.9
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install sphinx sphinx-rtd-theme
    
    - name: Build documentation
      run: |
        cd docs && make html
    
    - name: Deploy to GitHub Pages
      if: github.ref == 'refs/heads/main'
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./docs/_build/html